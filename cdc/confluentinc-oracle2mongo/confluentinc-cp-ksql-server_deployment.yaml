apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  labels:
    app: confluentinc-cp-ksql-server
  name: confluentinc-cp-ksql-server
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: confluentinc-cp-ksql-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: confluentinc-cp-ksql-server
    spec:
      hostname: ksql-server
      containers:
      - env:
        - name: KSQL_CONFIG_DIR
          value: /etc/ksql
#       - name: KSQL_LOG4J_OPTS:
#         value: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"
        - name: KSQL_BOOTSTRAP_SERVERS
          value: "broker:29092"
        - name: KSQL_HOST_NAME
          value: ksql-server
#       - name: KSQL_APPLICATION_ID
#         value: "cp-all-in-one"
        - name: KSQL_LISTENERS
          value: "http://0.0.0.0:8088"
#       - name: KSQL_CACHE_MAX_BYTES_BUFFERING
#         value: "0"
        - name: KSQL_KSQL_SCHEMA_REGISTRY_URL
          value: "http://schema-registry:8081"
#       - name: KSQL_PRODUCER_INTERCEPTOR_CLASSES
#         value: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
#       - name: KSQL_CONSUMER_INTERCEPTOR_CLASSES
#         value: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
        image: confluentinc/cp-ksql-server:latest
        imagePullPolicy: Always
        name: ksql-server
        securityContext:
          runAsUser: 0
        ports:
        - containerPort: 8088
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      serviceAccount: confluentinc-cp-ksql-server
      serviceAccountName: confluentinc-cp-ksql-server
